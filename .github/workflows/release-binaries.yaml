name: Release Binaries

on:
  workflow_dispatch:
    inputs:
      binary:
        options:
          - thor
          - disco
        description: 'Select the binary to build and release'
        type: choice
        required: true
        default: thor
  workflow_call:
    inputs:
      binary:
        description: 'Select the binary to build and release'
        type: string
        required: true
        default: thor

permissions:
  contents: write

jobs:
  build-binaries:
    runs-on: ${{ matrix.hostos }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - goos: linux
          goarch: amd64
          hostos: ubuntu-latest
        - goos: linux
          goarch: arm64
          hostos: ubuntu-24.04-arm
        - goos: darwin
          goarch: arm64
          hostos: macos-latest
        - goos: windows
          goarch: amd64
          hostos: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true

#      - name: Import GPG key
#        id: import_gpg
#        uses: crazy-max/ghaction-import-gpg@v6
#        with:
#          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
#          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Set Env
        run: |
          echo "BINARY=${{ inputs.binary || 'thor' }}" >> $GITHUB_ENV
          echo "BIN_EXT=${{ matrix.goos == 'windows' && '.exe' || '' }}" >> $GITHUB_ENV
          echo "THOR_VERSION=$(cat ./cmd/thor/VERSION | tr -d '\n')" >> $GITHUB_ENV
          echo "DISCO_VERSION=$(cat ./cmd/disco/VERSION | tr -d '\n')" >> $GITHUB_ENV
          echo "COPYRIGHT_YEAR=$(git --no-pager log -1 --format=%ad --date=format:%Y)" >> $GITHUB_ENV

      - name: Build Binary
        run: goreleaser build --single-target --id ${{ env.BINARY }} --clean
        env:
          DISCO_VERSION: ${{ env.DISCO_VERSION }}
          THOR_VERSION: ${{ env.THOR_VERSION }}
          COPYRIGHT_YEAR: ${{ env.COPYRIGHT_YEAR }}
          #GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

      - name: Debug
        run: | 
          ls -lh ./dist

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./dist/${{ env.BINARY}}*
          name: 'binaries'

  publish-binaries:
    needs: build-binaries
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call' }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: 'binaries'
          path: './dist'

#      - name: Import GPG key
#        id: import_gpg
#        uses: crazy-max/ghaction-import-gpg@v6
#        with:
#          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
#          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release
        env:
        #  GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
